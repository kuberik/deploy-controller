---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: lives.kuberik.io
spec:
  group: kuberik.io
  names:
    kind: Live
    listKind: LiveList
    plural: lives
    shortNames:
    - li
    singular: live
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.commit
      name: Commit
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'Live is deploying a single Kustomize layer from a commit in
          a git repository. ::: warning It is recommended that users create Lives
          only through a Controller, and not directly. See Controllers: [LiveDeployment](#kuberik-io-v1alpha1-LiveDeployment),
          [LiveDeploymentGroup](#kuberik-io-v1alpha1-LiveDeploymentGroup). :::'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'Specification of the desired behavior of the Live. More
              info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              commit:
                description: Commit of the git repository that will be checked out
                  to deploy kustomize layer from.
                type: string
              interruptible:
                description: Interruptible defines if the Live can be updated while
                  it is already actively reconciling
                type: boolean
              path:
                description: Relative path of the kustomize layer within the specified
                  git repository which will be applied to the cluster.
                type: string
              repository:
                description: Git repository containing the kustomize layer that needs
                  to be deployed
                properties:
                  auth:
                    description: Authentication configuration for the git repository
                    properties:
                      secretRef:
                        description: SecretRef is a reference to a secret containing
                          the credentials for a git repository. Secret needs to contain
                          the field <code>token</code> containing a GitHub or GitLab
                          token which has the permissions to read the repository.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    type: object
                  url:
                    description: URL of the git repository
                    type: string
                type: object
              serviceAccountName:
                description: Name of the ServiceAccount to use for deploying the resources.
                type: string
              transformers:
                description: Transformers define kustomize transformer layer which
                  will be used to transform the specified kustomize layer. The path
                  specified needs to be relative path in the git repository. Live
                  object will be included in the Kustomize layers with annotation
                  <code>config.kubernetes.io/local-config=true</code> so that the
                  transformers (most notably builtin <code>ReplacementTransformer</code>)
                  can use the information from the Live objects (such as git commit
                  hash).
                type: string
            type: object
          status:
            description: 'Most recently observed status of the Live. This data may
              not be up to date. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
            properties:
              conditions:
                description: Conditions is a list of conditions on the Live resource
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
